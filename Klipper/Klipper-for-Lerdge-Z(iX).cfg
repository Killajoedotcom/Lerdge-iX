##Lerdge Z for iX

[mcu]
## Obtain definition by "ls /dev/serial/by-id/*" then unplug to verify
serial:/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
[stepper_x]
step_pin: PB11
dir_pin: !PB10
enable_pin: !PB12
microsteps: 16
rotation_distance: 40
endstop_pin: ~!PB13  
position_endstop: 0
position_max: 180

[stepper_y]
step_pin: PB1
dir_pin: !PB0
enable_pin: !PB2
microsteps: 16
rotation_distance: 40
endstop_pin: ~!PB14  
position_endstop: 0
position_max: 180

[stepper_z]
step_pin: PC4
dir_pin: !PA7
enable_pin: !PC5
microsteps: 16
rotation_distance: 8
endstop_pin: ^PB15  
position_endstop: 0
position_max: 180

[extruder]
step_pin: PA5
dir_pin: !PA4
enable_pin: !PA6
microsteps: 16
rotation_distance: 34.557
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 22
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 260
min_extrude_temp: 0

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC2
pullup_resistor: 4700
control: watermark
min_temp: -100
max_temp: 130

[fan]
pin: PE5

[heater_fan Hotend0_Fan]
pin: PE4
heater: extruder
heater_temp: 45.0

[controller_fan Board_Cooling_Fan]
pin: PA3
idle_timeout:0

[led LED]
white_pin:PC6
initial_WHITE: 1.0

[neopixel RGB_LED]
pin:PC7
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[temperature_sensor Host]
sensor_type: temperature_host

[temperature_sensor Lerdge_MCU]
sensor_type: temperature_mcu

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100


[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}